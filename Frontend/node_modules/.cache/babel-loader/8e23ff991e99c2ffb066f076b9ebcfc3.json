{"ast":null,"code":"var _jsxFileName = \"/Users/rakshithasathyakumar/Desktop/yelp-app/Frontend/src/components/maps.js\";\n// import React, { Component } from 'react';\n// import { Map, GoogleApiWrapper } from 'google-maps-react';\n// const mapStyles = {\n//   width: '100%',\n//   height: '70%'\n// };\n// export class MapContainer extends Component {\n//   render() {\n//     return (\n//       <Map\n//         google={this.props.google}\n//         zoom={5}\n//         style={mapStyles}\n//         initialCenter={\n//           {\n//             lat: 48.85837009999999,\n//             lng: 2.2944813\n//           }\n//         }\n//       />\n//     );\n//   }\n// }\n// export default GoogleApiWrapper({\n//   apiKey: 'AIzaSyDbhKxcXXJaBcKSg6-Hjvb6BeaHQjSuZYc'\n// })(MapContainer);\nimport React, { Component } from 'react';\nimport { Map, GoogleApiWrapper, InfoWindow, Marker } from 'google-maps-react';\nimport Geocode from \"react-geocode\";\nconst mapStyles = {\n  width: '100%',\n  height: '70%'\n};\nGeocode.setApiKey(\"AIzaSyDbhKxcXXJaBcKSg6-Hjvb6BeaHQjSuZYc\");\nexport class MapContainer extends Component {\n  constructor(_props) {\n    super(_props); //this.state = {};\n\n    this.state = {\n      showingInfoWindow: false,\n      activeMarker: {},\n      selectedPlace: {},\n      data: []\n    };\n\n    this.initialise = () => {\n      for (let restaurant of this.props.restaurantlist) {\n        let location = restaurant.street.concat(' ', restaurant.city);\n        console.log(location);\n        let name = restaurant.name;\n        Geocode.fromAddress(\"505 E San Carlos St San Jose\").then(response => {\n          console.log(response.results[0].geometry.location);\n          const {\n            lat,\n            lng\n          } = response.results[0].geometry.location;\n          this.state.data.push( /*#__PURE__*/React.createElement(Marker, {\n            position: {\n              lat: lat,\n              lng: lng\n            },\n            onClick: this.onMarkerClick,\n            name: name,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 35\n            }\n          }));\n          this.forceUpdate();\n        }, error => {\n          console.error(error);\n        });\n      }\n    };\n\n    this.onMarkerClick = (props, marker, e) => this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n    this.onClose = props => {\n      if (this.state.showingInfoWindow) {\n        this.setState({\n          showingInfoWindow: false,\n          activeMarker: null\n        });\n      }\n    };\n\n    this.initialise();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Map, {\n      google: this.props.google,\n      zoom: 5,\n      style: mapStyles,\n      initialCenter: {\n        lat: 48.85837009999999,\n        lng: 2.2944813\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }\n    }, this.state.restList, /*#__PURE__*/React.createElement(InfoWindow, {\n      marker: this.state.activeMarker,\n      visible: this.state.showingInfoWindow,\n      onClose: this.onClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    }, this.state.selectedPlace.name))));\n  }\n\n}\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyDbhKxcXXJaBcKSg6-Hjvb6BeaHQjSuZYc'\n})(MapContainer);","map":{"version":3,"sources":["/Users/rakshithasathyakumar/Desktop/yelp-app/Frontend/src/components/maps.js"],"names":["React","Component","Map","GoogleApiWrapper","InfoWindow","Marker","Geocode","mapStyles","width","height","setApiKey","MapContainer","constructor","props","state","showingInfoWindow","activeMarker","selectedPlace","data","initialise","restaurant","restaurantlist","location","street","concat","city","console","log","name","fromAddress","then","response","results","geometry","lat","lng","push","onMarkerClick","forceUpdate","error","marker","e","setState","onClose","render","google","restList","apiKey"],"mappings":"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","sourcesContent":["// import React, { Component } from 'react';\n// import { Map, GoogleApiWrapper } from 'google-maps-react';\n\n// const mapStyles = {\n//   width: '100%',\n//   height: '70%'\n// };\n\n// export class MapContainer extends Component {\n//   render() {\n//     return (\n//       <Map\n//         google={this.props.google}\n//         zoom={5}\n//         style={mapStyles}\n//         initialCenter={\n//           {\n//             lat: 48.85837009999999,\n//             lng: 2.2944813\n//           }\n//         }\n//       />\n//     );\n//   }\n// }\n\n// export default GoogleApiWrapper({\n//   apiKey: 'AIzaSyDbhKxcXXJaBcKSg6-Hjvb6BeaHQjSuZYc'\n// })(MapContainer);\n\n\nimport React, { Component } from 'react';\nimport { Map, GoogleApiWrapper, InfoWindow, Marker } from 'google-maps-react';\nimport Geocode from \"react-geocode\";\n\nconst mapStyles = {\n    width: '100%',\n    height: '70%'\n  };\n\nGeocode.setApiKey(\"AIzaSyDbhKxcXXJaBcKSg6-Hjvb6BeaHQjSuZYc\");\n\nexport class MapContainer extends Component {\n  constructor(props) {\n    super(props);\n    //this.state = {};\n    this.initialise();\n  } \n\n  state = {\n    showingInfoWindow: false,\n    activeMarker: {},\n    selectedPlace: {},\n    data: []\n  };\n\n  initialise = () => {\n    for (let restaurant of this.props.restaurantlist) {\n      let location = restaurant.street.concat(' ', restaurant.city)\n      console.log(location)\n      let name = restaurant.name;\n    Geocode.fromAddress(\"505 E San Carlos St San Jose\")\n    .then(\n      response => {\n            console.log(response.results[0].geometry.location);\n            const { lat, lng } = response.results[0].geometry.location;\n            this.state.data.push( <Marker position={{lat: lat, lng: lng}} \n              onClick={this.onMarkerClick}\n              name={name}  \n            />)\n            this.forceUpdate()\n          },\n          error => {\n            console.error(error);\n          }\n        )\n    }\n  }\n\n  onMarkerClick = (props, marker, e) =>\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n  onClose = props => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  };\n\n  render() {\n    return (\n      <Map\n        google={this.props.google}\n        zoom={5}\n        style={mapStyles}\n        initialCenter={\n        {\n            lat: 48.85837009999999,\n            lng: 2.2944813\n          }\n        }\n      >\n      {this.state.restList}\n      {/* <Marker position={this.state.position} \n              onClick={this.onMarkerClick}\n              name={'Works!!!'}\n      /> */}\n        <InfoWindow\n          marker={this.state.activeMarker}\n          visible={this.state.showingInfoWindow}\n          onClose={this.onClose}\n        >\n          <div>\n            <h4>{this.state.selectedPlace.name}</h4>\n          </div>\n        </InfoWindow>\n        </Map>\n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyDbhKxcXXJaBcKSg6-Hjvb6BeaHQjSuZYc'\n})(MapContainer);\n"]},"metadata":{},"sourceType":"module"}