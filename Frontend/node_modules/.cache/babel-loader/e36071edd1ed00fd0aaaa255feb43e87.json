{"ast":null,"code":"var _jsxFileName = \"/Users/rakshithasathyakumar/Desktop/yelp-app/Frontend/src/components/user/allEvents.js\";\nimport React, { Component } from 'react';\nimport Navigationbar from '../navigation'; // import userProfile from './profile';\n\nimport '@fortawesome/fontawesome-free/css/all.min.css'; // import backgroundImage from '../images/menuCard.jpg';\n\nimport { Redirect } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { Form, Button, Card, CardGroup } from 'react-bootstrap';\nimport axios from 'axios';\nimport backendServer from \"../../backendServer\";\nexport class getAllEvents extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      eventList: [],\n      userRegList: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get(`${backendServer}/yelp/viewEvents`).then(res => {\n      this.setState({\n        eventList: res.data\n      });\n    });\n    axios.get(`${backendServer}/yelp/viewEvents/user/${localStorage.getItem(\"user_id\")}`).then(res => {\n      this.setState({\n        userRegList: res.data\n      });\n    });\n  }\n\n  render() {\n    //console.log(this.state.eventList);\n    let renderEvents = this.state.eventList.map(event => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        style: {\n          margin: \"10px\",\n          fontSize: \"25px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }\n      }, event.event_name, \" \"), /*#__PURE__*/React.createElement(Card.Text, {\n        style: {\n          margin: \"10px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"i\", {\n        class: \"fas fa-calendar-day\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 62\n        }\n      }), \" \", event.date), /*#__PURE__*/React.createElement(Card.Text, {\n        style: {\n          margin: \"10px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"i\", {\n        class: \"fas fa-hourglass\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 62\n        }\n      }), \" \", event.time), /*#__PURE__*/React.createElement(Button, {\n        style: {\n          backgroundColor: \"red\",\n          border: \"1px solid red\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: {\n          pathname: `/event/${event.event_id}`\n        },\n        style: {\n          color: \"white\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }\n      }, \" View details \"))), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }\n      }));\n    });\n    let renderRegEvents = this.state.userRegList.map(reg => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }\n      }, \" \", reg.event_name, \" \"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 48\n        }\n      }), /*#__PURE__*/React.createElement(\"h6\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"i\", {\n        class: \"fas fa-hourglass\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 26\n        }\n      }), \" \", reg.time, \" \"), /*#__PURE__*/React.createElement(\"h6\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }\n      }, \"  \", /*#__PURE__*/React.createElement(\"i\", {\n        class: \"fas fa-calendar-day\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 27\n        }\n      }), \" \", reg.date, \" \"), /*#__PURE__*/React.createElement(\"h6\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"i\", {\n        class: \"fas fa-map-pin\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 26\n        }\n      }, \" \"), \" \", reg.event_location, \" \"), /*#__PURE__*/React.createElement(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }\n      }));\n    });\n    let render; //rest_id = localStorage.getItem(\"rest_id\");\n\n    if (localStorage.getItem(\"rest_id\") !== null) {\n      render = /*#__PURE__*/React.createElement(\"div\", {\n        class: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"center\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }\n      }, \" I am here \"), /*#__PURE__*/React.createElement(\"h1\", {\n        style: {\n          margin: \"10px\",\n          color: \"red\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }\n      }, \" List of Events \")), renderEvents);\n    } else {\n      render = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        class: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }\n      }, \"I am here too\"), /*#__PURE__*/React.createElement(\"h2\", {\n        style: {\n          color: \"red\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }\n      }, \" Upcoming events \"), /*#__PURE__*/React.createElement(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }\n      }), renderRegEvents), /*#__PURE__*/React.createElement(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        class: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"center\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        style: {\n          margin: \"10px\",\n          color: \"red\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }\n      }, \" List of Events \")), renderEvents));\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Navigationbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    }), render);\n  }\n\n}\nexport default getAllEvents;","map":{"version":3,"sources":["/Users/rakshithasathyakumar/Desktop/yelp-app/Frontend/src/components/user/allEvents.js"],"names":["React","Component","Navigationbar","Redirect","Link","Form","Button","Card","CardGroup","axios","backendServer","getAllEvents","constructor","props","state","eventList","userRegList","componentDidMount","get","then","res","setState","data","localStorage","getItem","render","renderEvents","map","event","margin","fontSize","event_name","date","time","backgroundColor","border","pathname","event_id","color","renderRegEvents","reg","event_location"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Navigationbar from '../navigation';\n// import userProfile from './profile';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\n// import backgroundImage from '../images/menuCard.jpg';\nimport { Redirect } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { Form, Button, Card, CardGroup} from 'react-bootstrap';\nimport axios from 'axios';\nimport backendServer from \"../../backendServer\";\n\nexport class getAllEvents extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            eventList: [],\n            userRegList: [],\n        };\n    }\n\n    componentDidMount() {\n        axios.get(`${backendServer}/yelp/viewEvents`)\n        .then(res => {\n            this.setState({ eventList: res.data });\n        });\n\n        axios.get(`${backendServer}/yelp/viewEvents/user/${localStorage.getItem(\"user_id\")}`)\n        .then(res => {\n            this.setState({ userRegList: res.data });\n        });\n    }\n\n    render () {\n        //console.log(this.state.eventList);\n        let renderEvents = this.state.eventList.map(event => {\n            return (\n                <div>\n                    <Card>\n                        <Card.Title style={{margin: \"10px\", fontSize: \"25px\"}}>{event.event_name} </Card.Title>\n                        <Card.Text style={{margin: \"10px\"}}> <i class=\"fas fa-calendar-day\"></i> {event.date}</Card.Text>\n                        <Card.Text style={{margin: \"10px\"}}> <i class=\"fas fa-hourglass\"></i> {event.time}</Card.Text>\n                        <Button style={{backgroundColor: \"red\", border: \"1px solid red\"}}>\n                        <Link to = {{pathname: `/event/${event.event_id}`}} style={{color: \"white\"}}> View details </Link></Button>\n                    </Card>\n                    <br/>\n                    <br/>\n                </div> \n            )\n        })\n        let renderRegEvents = this.state.userRegList.map(reg => {\n            return (\n                <div>\n                    <h4> {reg.event_name} </h4><br/>\n                    <h6> <i class=\"fas fa-hourglass\"></i> {reg.time} </h6>\n                    <h6>  <i class=\"fas fa-calendar-day\"></i> {reg.date} </h6>\n                    <h6> <i class=\"fas fa-map-pin\"> </i> {reg.event_location} </h6>\n                    <hr />\n                </div>\n            )\n        })\n        let render;\n        //rest_id = localStorage.getItem(\"rest_id\");\n        if(localStorage.getItem(\"rest_id\") !== null) {\n            \n          render = \n          \n          <div class=\"container\">\n            <center>\n                <h2> I am here </h2>\n                <h1 style={{margin: \"10px\", color:\"red\"}}> List of Events </h1>\n            </center>\n            {renderEvents}\n        </div>\n        } else {\n            render = \n            <div>\n                <div class=\"container\">\n                    <p>I am here too</p>\n                    <h2 style={{color:\"red\"}}> Upcoming events </h2>\n                    <hr />\n                    {renderRegEvents}\n                </div>\n                <hr />\n                <div class=\"container\">\n                <center>\n                    <h1 style={{margin: \"10px\", color:\"red\"}}> List of Events </h1>\n                </center>\n                    {renderEvents}\n                </div>\n            </div>\n        }\n        return (\n            <React.Fragment>\n                <Navigationbar/>\n                {render}   \n            </React.Fragment>    \n        )\n    }\n         \n}\nexport default getAllEvents;"]},"metadata":{},"sourceType":"module"}