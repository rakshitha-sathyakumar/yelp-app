{"ast":null,"code":"var _jsxFileName = \"/Users/rakshithasathyakumar/Desktop/yelp-app/Frontend/src/components/restaurant/restOrders.js\";\nimport React, { Component } from 'react';\nimport Navigationbar from '../navigation'; // import userProfile from './profile';\n\nimport '@fortawesome/fontawesome-free/css/all.min.css'; // import backgroundImage from '../images/menuCard.jpg';\n\nimport { Redirect } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { Form, Button, Card, CardGroup } from 'react-bootstrap';\nimport axios from 'axios';\nimport backendServer from '../../backendServer'; // import { getMainCourse } from './getMaincourse';\n\nexport class restOrders extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleCheckboxChange = e => {\n      this.setState({\n        orderStatus: e.target.value\n      });\n      this.setState({\n        order_id: e.target.order_id\n      });\n    };\n\n    this.onUpdate = e => {\n      e.preventDefault();\n      const data = {\n        order_id: this.state.order_id,\n        order_status: this.state.orderStatus\n      };\n      console.log(data);\n      return axios.post(`${backendServer}/yelp/order/update`, data).then(response => {\n        console.log(response.status);\n\n        if (response.status === 200) {\n          alert(\"Order updated \"); // window.location = `/restOrders`\n        }\n      }).catch(function (error) {\n        alert(\"Error\");\n      });\n    };\n\n    this.state = {\n      restOrders: []\n    };\n    this.handleCheckboxChange = this.handleCheckboxChange.bind(this);\n  }\n\n  componentDidMount() {\n    axios.get(`${backendServer}/yelp/order/rest/${localStorage.getItem(\"rest_id\")}`).then(res => {\n      //console.log(res.data)\n      this.setState({\n        restOrders: res.data\n      }); //console.log(this.state.appetizerList);\n    });\n  }\n\n  render() {\n    let renderOrders = this.state.restOrders.map(order => {\n      let button1;\n      let button2;\n\n      if (order.order_type === 'pickup') {\n        button1 = /*#__PURE__*/React.createElement(Form.Check, {\n          id: order.order_id,\n          name: order.dish_name,\n          label: \"Pickup ready\",\n          value: \"Pickup ready\",\n          onChange: this.handleCheckboxChange,\n          style: {\n            marginLeft: \"10px\",\n            color: 'red'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 27\n          }\n        });\n        button2 = /*#__PURE__*/React.createElement(Form.Check, {\n          id: order.order_id,\n          name: order.dish_name,\n          label: \"Picked up\",\n          value: \"Picked up\",\n          onChange: this.handleCheckboxChange,\n          style: {\n            marginLeft: \"10px\",\n            color: 'red'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 27\n          }\n        });\n      } else {\n        button1 = /*#__PURE__*/React.createElement(Form.Check, {\n          id: order.order_id,\n          name: order.dish_name,\n          label: \"On the way\",\n          value: \"On the way\",\n          onChange: this.handleCheckboxChange,\n          style: {\n            marginLeft: \"10px\",\n            color: 'red'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 27\n          }\n        });\n        button2 = /*#__PURE__*/React.createElement(Form.Check, {\n          id: order.order_id,\n          name: order.dish_name,\n          label: \"Delivered\",\n          value: \"On the way\",\n          onChange: this.handleCheckboxChange,\n          style: {\n            marginLeft: \"10px\",\n            color: 'red'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 27\n          }\n        });\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        style: {\n          border: \"none\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        style: {\n          marginLeft: \"10px\",\n          fontSize: \"25px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }\n      }, order.dish_name, \" \"), /*#__PURE__*/React.createElement(Card.Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          fontWeight: \"bold\",\n          marginLeft: \"10px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 36\n        }\n      }, \" Customer: \"), /*#__PURE__*/React.createElement(Link, {\n        to: {\n          pathname: `/userProfile/${order.user_id}`\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 29\n        }\n      }, \" \", order.first_name, \" \", order.last_name, \" \"), \" \"), /*#__PURE__*/React.createElement(Card.Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          fontWeight: \"bold\",\n          marginLeft: \"10px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 37\n        }\n      }, \"Order type:\"), \" \", order.order_type), /*#__PURE__*/React.createElement(Card.Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          fontWeight: \"bold\",\n          marginLeft: \"10px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 37\n        }\n      }, \"Order Status:\"), \" \", order.order_status), /*#__PURE__*/React.createElement(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(Form, {\n        onSubmit: this.handleUpdate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Form.Check, {\n        id: order.order_id,\n        name: order.dish_name,\n        label: \"Order received\",\n        value: \"Order received\",\n        onChange: this.handleCheckboxChange,\n        style: {\n          marginLeft: \"10px\",\n          color: 'red'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Form.Check, {\n        id: order.order_id,\n        name: order.dish_name,\n        label: \"Preparing\",\n        value: \"Preparing\",\n        onChange: this.handleCheckboxChange,\n        style: {\n          marginLeft: \"10px\",\n          color: 'red'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 29\n        }\n      }), button1, button2, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        style: {\n          marginLeft: \"10px\",\n          marginTop: \"10px\",\n          backgroundColor: \"red\",\n          border: \"1px solid red\"\n        },\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 29\n        }\n      }, \"Update order status \")))), /*#__PURE__*/React.createElement(\"hr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }\n      }));\n    });\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Navigationbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"center\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      style: {\n        margin: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }\n    }, \" Your orders \")), renderOrders));\n  }\n\n}\nexport default restOrders;","map":{"version":3,"sources":["/Users/rakshithasathyakumar/Desktop/yelp-app/Frontend/src/components/restaurant/restOrders.js"],"names":["React","Component","Navigationbar","Redirect","Link","Form","Button","Card","CardGroup","axios","backendServer","restOrders","constructor","props","handleCheckboxChange","e","setState","orderStatus","target","value","order_id","onUpdate","preventDefault","data","state","order_status","console","log","post","then","response","status","alert","catch","error","bind","componentDidMount","get","localStorage","getItem","res","render","renderOrders","map","order","button1","button2","order_type","dish_name","marginLeft","color","border","fontSize","fontWeight","pathname","user_id","first_name","last_name","handleUpdate","marginTop","backgroundColor","margin"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Navigationbar from '../navigation';\n// import userProfile from './profile';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\n// import backgroundImage from '../images/menuCard.jpg';\nimport { Redirect } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { Form, Button, Card, CardGroup} from 'react-bootstrap';\nimport axios from 'axios';\nimport backendServer from '../../backendServer';\n// import { getMainCourse } from './getMaincourse';\n\nexport class restOrders extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            restOrders: []\n        };\n        this.handleCheckboxChange = this.handleCheckboxChange.bind(this);\n    }\n\n    componentDidMount() {\n        axios.get(`${backendServer}/yelp/order/rest/${localStorage.getItem(\"rest_id\")}`)\n        .then(res => {\n            //console.log(res.data)\n            this.setState({ restOrders: res.data });\n            //console.log(this.state.appetizerList);\n        });\n    }\n\n    handleCheckboxChange = (e) => {\n        this.setState({\n            orderStatus: e.target.value\n        })\n        this.setState ({\n            order_id: e.target.order_id\n        })\n    }\n\n    onUpdate = (e) => {\n        e.preventDefault();\n        const data = {\n            order_id: this.state.order_id,\n            order_status: this.state.orderStatus,\n        }\n        console.log(data);\n        return axios.post(`${backendServer}/yelp/order/update`,data)\n        .then((response) => {\n            console.log(response.status)\n          if (response.status === 200) {\n            alert(\"Order updated \")\n           // window.location = `/restOrders`\n          }\n        })\n        .catch(function(error) {\n           alert(\"Error\")\n        })\n      }\n\n    render () {\n        let renderOrders = this.state.restOrders.map(order => {\n            let button1;\n            let button2;\n            if(order.order_type === 'pickup'){\n                button1 = <Form.Check id = {order.order_id} name={order.dish_name} label='Pickup ready' \n                            value='Pickup ready' onChange={this.handleCheckboxChange} style={{marginLeft:\"10px\", color: 'red' }}/>\n                button2 = <Form.Check id = {order.order_id} name={order.dish_name} label='Picked up' \n                    value='Picked up' onChange={this.handleCheckboxChange} style={{marginLeft:\"10px\", color: 'red' }}/>\n            } else {\n                button1 = <Form.Check id = {order.order_id} name={order.dish_name} label='On the way' \n                            value='On the way' onChange={this.handleCheckboxChange} style={{marginLeft:\"10px\", color: 'red' }}/>\n                button2 = <Form.Check id = {order.order_id} name={order.dish_name} label='Delivered' \n                    value='On the way' onChange={this.handleCheckboxChange} style={{marginLeft:\"10px\", color: 'red' }}/>\n            }\n            return (\n                <div>\n                    <Card style={{border: \"none\"}}>\n                        <Card.Title style={{marginLeft:\"10px\", fontSize: \"25px\"}}>{order.dish_name} </Card.Title>\n                        <Card.Text><span style={{fontWeight: \"bold\", marginLeft:\"10px\"}}> Customer: </span>\n                            <Link to = {{pathname: `/userProfile/${order.user_id}`}}> {order.first_name} {order.last_name} </Link> </Card.Text>\n                        {/* <Card.Text> <span style={{fontWeight: \"bold\", marginLeft:\"10px\"}}>Restuarant:</span> {order.rest_name}</Card.Text> */}\n                        <Card.Text> <span style={{fontWeight: \"bold\", marginLeft:\"10px\"}}>Order type:</span> {order.order_type}</Card.Text>\n                        <Card.Text> <span style={{fontWeight: \"bold\", marginLeft:\"10px\"}}>Order Status:</span> {order.order_status}</Card.Text>\n                        <hr />\n                        <Form onSubmit={this.handleUpdate}>\n                            <Form.Check\n                                id = {order.order_id}\n                                name={order.dish_name}\n                                label='Order received'\n                                value='Order received'\n                                onChange={this.handleCheckboxChange}\n                                style={{marginLeft:\"10px\", color: 'red' }}\n                            />\n                            <Form.Check\n                                id = {order.order_id}\n                                name={order.dish_name}\n                                label='Preparing'\n                                value='Preparing'\n                                onChange={this.handleCheckboxChange}\n                                style={{marginLeft:\"10px\", color: 'red' }}\n                            />\n                            {button1}\n                            {button2}\n                            <div>\n                            <Button style={{ marginLeft:\"10px\", marginTop: \"10px\", backgroundColor: \"red\", border: \"1px solid red\"}} type=\"submit\"> \n                                 Update order status </Button>\n                            </div>\n                        </Form>\n                    </Card>\n                    <hr />\n                    <br/>\n                    <br/>\n                </div>\n            )\n        })\n        return (\n            <React.Fragment>\n                <Navigationbar/>\n                <div class=\"container\">\n                    <center>\n                    <h1 style={{margin: \"10px\"}}> Your orders </h1>\n                    </center>\n                        {renderOrders}\n        \n                </div>\n            </React.Fragment>\n        )\n    }\n         \n}\nexport default restOrders;"]},"metadata":{},"sourceType":"module"}